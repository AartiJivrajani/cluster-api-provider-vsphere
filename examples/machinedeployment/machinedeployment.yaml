apiVersion: cluster.x-k8s.io/v1alpha2
kind: MachineDeployment
metadata:
  name: ${CLUSTER_NAME}-md-0
  labels:
    cluster.x-k8s.io/cluster-name: ${CLUSTER_NAME}
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/cluster-name: ${CLUSTER_NAME}
  template:
    metadata:
      labels:
        cluster.x-k8s.io/cluster-name: ${CLUSTER_NAME}
    spec:
      version: ${KUBERNETES_VERSION}
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1alpha2
          kind: KubeadmConfigTemplate
          name: ${CLUSTER_NAME}-md-0
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha2
        kind: VSphereMachineTemplate
        name: ${CLUSTER_NAME}-md-0
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha2
kind: VSphereMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-md-0
spec:
  template:
    spec:
      datacenter: "${VSPHERE_DATACENTER}"
      network:
        devices:
        - networkName: "${VSPHERE_NETWORK}"
          dhcp4: true
          dhcp6: false
      numCPUs: ${VSPHERE_NUM_CPUS}
      memoryMiB: ${VSPHERE_MEM_MIB}
      diskGiB: ${VSPHERE_DISK_GIB}
      template: "${VSPHERE_TEMPLATE}"
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha2
kind: KubeadmConfigTemplate
metadata:
  name: ${CLUSTER_NAME}-md-0
spec:
  joinConfiguration:
    nodeRegistration:
      name: "{{ ds.meta_data.hostname }}"
      kubeletExtraArgs:
        cloud-provider: vsphere
  files:
  - path: /home/ubuntu/.ssh/authorized_keys
    owner: ubuntu:ubuntu
    permissions: "0400"
    content: "${SSH_AUTHORIZED_KEY}"
  - path: /etc/hostname
    owner: root:root
    permissions: "0644"
    content: |
      {{ ds.meta_data.hostname }}
  - path: /etc/hosts
    owner: root:root
    permissions: "0644"
    content: |
      ::1         ipv6-localhost ipv6-loopback
      127.0.0.1   localhost
      127.0.0.1   {{ ds.meta_data.hostname }}
  preKubeadmCommands:
  - "[hostname, {{ ds.meta_data.hostname }}]"
